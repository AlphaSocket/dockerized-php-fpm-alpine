#!/bin/bash
#
# Deploy master branch merging in others branches to build different versions of docker images
#

set -e 

GIT_AUTHOR="alphasocket <22446807+AlphaSocket@users.noreply.github.com>"
GIT_BRANCH_MASTER='master'
GIT_BRANCH_DEVELOP='develop'
BASEDIR=${PWD##*/}
REPO_NAME=${BASEDIR}
GIT_USER='alphasocket'
CUR_BRANCH=$(git rev-parse --abbrev-ref HEAD)
GIT_BRANCHES=$(git for-each-ref --format='%(refname:short)' refs/heads/ | xargs)
pass=""

if [ -z "$GITHUB_PASS" ] ; then
    echo -ne "Set GITHUB_PASS to push branches automatically:\n export GITHUB_PASS={password}\n"
else
    pass=":$GITHUB_PASS"
fi

#
# Commit master
#
if [ $CUR_BRANCH == $GIT_BRANCH_MASTER ] || [ $CUR_BRANCH == $GIT_BRANCH_DEVELOP ]; then
    git add . 
    if [ -z "$(git status --porcelain)" ]; then 
        echo -ne "Nothing to commit \n"
    else 
        git commit --author "$GIT_AUTHOR"
    fi
    
else
    echo -ne "$0 can be launched only from master and develop\n"
    exit 1
fi

#
# Deploy in other branches
#
for branch in $GIT_BRANCHES
do
    if [ $branch == $GIT_BRANCH_MASTER ] || [ $branch == $GIT_BRANCH_DEVELOP ]; then
        continue
    fi

    echo -ne "-- Updating branch $branch -- \n"
    git checkout --force $branch
    git pull origin $branch
    git merge master --no-commit 
    # Remove master files
    rm -f .gitignore
    rm -f deploy-branches
    git add .
    git commit -m "Merged master in $branch" --allow-empty --author "$GIT_AUTHOR"
    $(which dockerfile-build)
    rm -f .gitignore
    rm -f deploy-branches
    git add .
    git commit -m "Re-built dockerfile" --allow-empty --author "$GIT_AUTHOR"
    echo -ne "-- Updated branch $branch -- \n\n"
done

#
# Push
#
git checkout $GIT_BRANCH_MASTER --force
git push https://$GIT_USER$pass@github.com/$GIT_USER/$REPO_NAME --all
git push https://$GIT_USER$pass@github.com/$GIT_USER/$REPO_NAME --tags