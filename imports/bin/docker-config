#!/bin/sh
#
# Run all configuration scripts
#
set -e

touch /tmp/container_status
if [ ! -f "/tmp/container_status" ];
then
    echo "Error: Can't create container_status file /tmp/container_status";
    exit 1;
fi

echo "### Starting container configuration"
echo "running_config" > /tmp/container_status

#
# Groups
#
set -x

# Add main group
if [ ! -z "$CONFIG_GROUPS_MAIN_NAME" ] && [ ! -z "$CONFIG_GROUPS_MAIN_ID" ]; then
    if ! getent group "$CONFIG_GROUPS_MAIN_NAME"; then
        addgroup -g $CONFIG_GROUPS_MAIN_ID -S "$CONFIG_GROUPS_MAIN_NAME";
    fi
fi

# Add additional group
if [ ! -z "$CONFIG_GROUPS_ADDITIONAL_NAME" ] && [ ! -z "$CONFIG_GROUPS_ADDITIONAL_ID" ]; then
    if ! getent group "$CONFIG_GROUPS_ADDITIONAL_NAME"; then
        addgroup -g $CONFIG_GROUPS_ADDITIONAL_ID -S "$CONFIG_GROUPS_ADDITIONAL_NAME";
    fi
fi

# Main user
if  [ ! -z "$CONFIG_USERS_MAIN_NAME" ] && [ ! -z "$CONFIG_USERS_MAIN_ID" ]; then
    # Remove user if not exists 
    if id -u "$CONFIG_USERS_MAIN_NAME"; then
        deluser "$CONFIG_USERS_MAIN_NAME";
    fi
    # Add user specifing groups
    adduser -u $CONFIG_USERS_MAIN_ID -S "$CONFIG_USERS_MAIN_NAME" -G $CONFIG_USERS_MAIN_GROUPS;
fi

# Add additional user
if [ ! -z "$CONFIG_USERS_ADDITIONAL_NAME" ] && [ ! -z "$CONFIG_USERS_ADDITIONALs_ID" ]; then
    # Remove user if not exists 
    if id -u "$CONFIG_USERS_ADDITIONAL_NAME"; then
        deluser "$CONFIG_USERS_ADDITIONAL_NAME";
    fi
    # Add user specifing id and groups
    adduser -u $CONFIG_USERS_ADDITIONAL_ID -S "$CONFIG_USERS_ADDITIONAL_NAME" -G $CONFIG_USERS_ADDITIONAL_NAME;
fi

#
# Configurations
#
for config_script in /usr/local/bin/config/*; 
do
    $config_script 1>/dev/stdout 2>/dev/stderr; 
done;

# End configuration
echo "ready" > /tmp/container_status
echo "### Finished container configuration"

exit 0