project: 
  title: &project_title Alphasocket/dockerized-php-fpm-alpine
  codename: &project_codename php-fpm-alpine
  description: Dockerized PHP-FPM service on alpine distro

#
# Build process
# Creates dockerfile and file used in it
#
build:
  envvars:
    groups:
      main:
        id: 1082
        name: 'www-data'
    users:
      main:
        id: 1082
        name: 'www-data'
        groups: 'www-data'
    name: *project_codename
    # PHP
    php:
      version: 
        valueFromCommand: 'version=$(echo $BUILD_BRANCH | cut -d \- -f 1); [ "$version" = "latest" ] && echo 7.2 || echo $version'
      fpm:
        port: '9000'
      xdebug:
        port: '9001'
    from:
      valueFromCommand: "echo php:${BUILD_PHP_VERSION}-fpm-alpine"
    ports:
      main: 
        valueFromParse: $BUILD_PHP_FPM_PORT
      additional: 
        valueFromCommand: '[ "$BUILD_ENV" = "$GENERAL_KEYS_DEV" ] && echo "${BUILD_PHP_XDEBUG_PORT}" || echo ""'
    cmd: /usr/local/bin/docker-php-entrypoint php-fpm
    paths:
      templates: /usr/local/templates
  imports:
    - imports/templates:$BUILD_PATHS_TEMPLATES

#
# Setup process injected in dockerfile
#
setup:
  # Setup env 
  envvars:
    dependencies:
      setup: "binutils-libs binutils m4 perl autoconf file libgcc gmp mpfr3 gcc g++ make re2c libatomic libstdc++ libmagic libc-dev"
      config: "gettext"
      runtime: ""
    php: &php_ext
      ext: 
        curl:
          enabled: True
          dependencies: curl-dev
        gd:
          enabled: True
          dependencies: freetype libpng libjpeg-turbo freetype-dev libpng-dev libjpeg-turbo-dev musl musl-dev
          configure: True
          configure_arg: "
            --with-gd 
            --with-freetype-dir=/usr/include/ 
            --with-png-dir=/usr/include/ 
            --with-jpeg-dir=/usr/include/"
        iconv:
          enabled: True
          dependencies: musl musl-dev
        mysqli:
          enabled: True
          dependencies: libxml2-dev
        mbstring:
          enabled: True
        pdo_mysql:
          enabled: True
          dependencies: libxml2-dev
        mcrypt:
          enabled:
            valueFromCommand: '[ "$BUILD_PHP_VERSION" = "7.2" ] && echo $GENERAL_KEYS_FALSE || echo $GENERAL_KEYS_TRUE'
          dependencies: libmcrypt-dev libltdl
        opcache:
          enabled: True
          dependencies: musl musl-dev
        readline:
          enabled: True
          dependencies: musl-dev libedit-dev
        redis:
          enabled: True
          pecl: True
        xdebug:
          enabled:
            valueFromCommand: '[ "$BUILD_ENV" = "$GENERAL_KEYS_DEV" ] && echo "$GENERAL_KEYS_TRUE" || echo "$GENERAL_KEYS_FALSE"'
          pecl: True
          version:
            valueFromCOmmand: '[ "$BUILD_PHP_VERSION" = '5.6' ] && echo "-2.5.5" || echo "" '
        soap:
          enabled: True
          dependencies: libxml2-dev
        sodium:
          enabled:
            valueFromCommand: '[ "$BUILD_PHP_VERSION" = "7.2" ] && echo $GENERAL_KEYS_TRUE || echo $GENERAL_KEYS_FALSE'
          dependencies: libsodium-dev
        xml:
          enabled: True
          dependencies: libxml2-dev
        zip:
          enabled: True
          dependencies: zlib
      exts: curl gd iconv mysqli mbstring pdo_mysql mcrypt opcache readline redis xdebug soap sodium xml zip
      
  # Setup Processes
  processes:

    - title: "Install PHP extension gd"
      shell_condition: "$SETUP_PHP_EXT_GD = $GENERAL_KEYS_TRUE"
      commands:
        - EXT='gd'
        # Dependencies
        - PHP_EXT_DEP_TO_INSTALL="$PHP_EXT_DEP_TO_INSTALL $EXT"
        # Config
        - PHP_EXT_TO_CONFIGURE="$PHP_EXT_TO_CONFIGURE $EXT"
        # Install
        - PHP_EXT_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT"

    - title: "Install PHP extension iconv"
      shell_condition: "$SETUP_PHP_EXT_ICONV = $GENERAL_KEYS_TRUE"
      commands: 
        - EXT='iconv'
        # Dependencies
        - PHP_EXT_DEP_TO_INSTALL="$PHP_EXT_DEP_TO_INSTALL $EXT"
        # Install
        - PHP_EXT_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT"

    - title: "Install PHP extension opcache"
      shell_condition: "$SETUP_PHP_EXT_OPCACHE = $GENERAL_KEYS_TRUE"
      commands:
        - EXT='opcache'
        # Dependencies
        - PHP_EXT_DEP_TO_INSTALL="$PHP_EXT_DEP_TO_INSTALL $EXT"
        # Install
        - PHP_EXT_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT"

    - title: "Install PHP extension readline"
      shell_condition: "$SETUP_PHP_EXT_READLINE = $GENERAL_KEYS_TRUE"
      commands: 
        # Install
        - EXT='readline'
        # Dependencies
        - PHP_EXT_DEP_TO_INSTALL="$PHP_EXT_DEP_TO_INSTALL $EXT"
        # Install
        - PHP_EXT_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT"

    - title: "Install PHP extension soap"
      shell_condition: "$SETUP_PHP_EXT_SOAP = $GENERAL_KEYS_TRUE"
      commands: 
        # Install
        - EXT='soap'
        # Dependencies
        - PHP_EXT_DEP_TO_INSTALL="$PHP_EXT_DEP_TO_INSTALL $EXT"
        # Install
        - PHP_EXT_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT"

    - title: "Install PHP extension xml"
      shell_condition: "$SETUP_PHP_EXT_XML = $GENERAL_KEYS_TRUE"
      commands: 
        # Install
        - EXT='xml'
        # Dependencies
        - PHP_EXT_DEP_TO_INSTALL="$PHP_EXT_DEP_TO_INSTALL $EXT"
        # Install
        - PHP_EXT_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT"

    - title: "Install PHP extension mysqli"
      shell_condition: "$SETUP_PHP_EXT_MYSQLI = $GENERAL_KEYS_TRUE"
      commands: 
        # Install
        - EXT='mysqli'
        # Dependencies
        - PHP_EXT_DEP_TO_INSTALL="$PHP_EXT_DEP_TO_INSTALL $EXT"
        # Install
        - PHP_EXT_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT"

    - title: "Install PHP extension pdo_mysql"
      shell_condition: "$SETUP_PHP_EXT_PDO_MYSQL = $GENERAL_KEYS_TRUE"
      commands: 
        # Install
        - EXT='pdo_mysql'
        # Dependencies
        - PHP_EXT_DEP_TO_INSTALL="$PHP_EXT_DEP_TO_INSTALL $EXT"
        # Install
        - PHP_EXT_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT"

    - title: "Install PHP extension curl"
      shell_condition: "$SETUP_PHP_EXT_CURL = $GENERAL_KEYS_TRUE"
      commands: 
        # Install
        - EXT='curl'
        # Dependencies
        - PHP_EXT_DEP_TO_INSTALL="$PHP_EXT_DEP_TO_INSTALL $EXT"
        # Install
        - PHP_EXT_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT"

    - title: "Install PHP extension json"
      shell_condition: "$SETUP_PHP_EXT_JSON = $GENERAL_KEYS_TRUE"
      commands: 
            # Install
        - docker-php-ext-install json
        # Install
        - EXT='xml'
        # Dependencies
        - PHP_EXT_DEP_TO_INSTALL="$PHP_EXT_DEP_TO_INSTALL $EXT"
        # Install
        - PHP_EXT_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT"

    - title: "Install PHP extension mcrypt"
      shell_condition: "$SETUP_PHP_EXT_MCRYPT = $GENERAL_KEYS_TRUE"
      commands: 
        # Install
        - EXT='mcrypt'
        # Dependencies
        - PHP_EXT_DEP_TO_INSTALL="$PHP_EXT_DEP_TO_INSTALL $EXT"
        # Install
        - PHP_EXT_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT"

    - title: "Install PHP extension mbstring"
      shell_condition: "$SETUP_PHP_EXT_MBSTRING = $GENERAL_KEYS_TRUE"
      commands: 
        # Install
        - EXT='mbstring'
        # Dependencies
        - PHP_EXT_DEP_TO_INSTALL="$PHP_EXT_DEP_TO_INSTALL $EXT"
        # Install
        - PHP_EXT_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT"

    - title: "Install PHP extension sodium"
      shell_condition: "$SETUP_PHP_EXT_SODIUM = $GENERAL_KEYS_TRUE"
      commands: 
        # Install
        - EXT='sodium'
        # Dependencies
        - PHP_EXT_DEP_TO_INSTALL="$PHP_EXT_DEP_TO_INSTALL $EXT"
        # Install
        - PHP_EXT_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT"

    - title: "Install PHP extension zip"
      shell_condition: "$SETUP_PHP_EXT_ZIP = $GENERAL_KEYS_TRUE"
      commands: 
        - EXT='zip'
        # Dependencies
        - PHP_EXT_DEP_TO_INSTALL="$PHP_EXT_DEP_TO_INSTALL $EXT"
        # Install
        - PHP_EXT_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT"
    
    - title: "Install PHP extension redis"
      shell_condition: "$SETUP_PHP_EXT_REDIS = $GENERAL_KEYS_TRUE"
      commands: 
        - pecl install redis

    - title: "Install PHP extension xdebug"
      shell_condition: "$SETUP_PHP_EXT_XDEBUG = $GENERAL_KEYS_TRUE"
      commands:
        - XDEBUG_PACKAGE="xdebug"
        - if [ "$BUILD_PHP_VERSION" = '5.6' ]; then XDEBUG_PACKAGE="xdebug-2.5.5"; fi
        - pecl install $XDEBUG_PACKAGE
        
      
    
    
    - title: "Install ext if enabled"
      commands:
        - for EXT in $CONFIG_PHP_EXTS
          do
            IS_ENABLED="$( echo "$SETUP_PHP_EXT_${EXT}_ENABLED" | envsubst)";
            IS_PECL="$( echo "$SETUP_PHP_EXT_${EXT}_PECL" | envsubst)";
            if [ "$IS_ENABLED" = "$GENERAL_KEYS_TRUE" ]; then
              if [ "$IS_PECL" = "$GENERAL_KEYS_TRUE" ]; then
                PHP_EXT_PACL_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT";
              else
                PHP_EXT_DEP_TO_INSTALL="$PHP_EXT_DEP_TO_INSTALL $EXT";
                PHP_EXT_TO_CONFIGURE="$PHP_EXT_TO_CONFIGURE $EXT";
                PHP_EXT_TO_INSTALL="$PHP_EXT_TO_INSTALL $EXT";
              fi
            fi
          done
  
    - title: "Install dep"
      shell_condition: ' ! -z "$PHP_EXT_DEP_TO_INSTALL" '
      commands:
        - APK_DEPS=""
        - for EXT in $PHP_EXT_DEP_TO_INSTALL
          do
            APK_DEPS="$APK_DEPS $( echo "$SETUP_PHP_EXT_${EXT}_DEPENDENCIES" | envsubst)";
          done
        - apk --no-cache add $APK_DEPS
            
    
    - title: "Configure php ext"
      shell_condition: ' ! -z "$PHP_EXT_TO_CONFIGURE" '
      commands:
        - for EXT in $PHP_EXT_TO_CONFIGURE
          do
            CONFIG_ARGS="$( echo "$SETUP_PHP_EXT_${EXT}_CONFIG_ARGS" | envsubst )";
            docker-php-ext-configure $EXT $CONFIG_ARGS;
          done
    
    - title: "Install php ext enabled "
      shell_condition: ' ! -z "$PHP_EXT_TO_INSTALL" '
      commands:
        - docker-php-ext-install $PHP_EXT_TO_INSTALL
        
    - title: "Install php ext enabled "
      shell_condition: ' ! -z "$PHP_EXT_PECL_TO_INSTALL" '
      commands:
        - for EXT in $PHP_EXT_PECL_TO_INSTALL
          do
            VERSION="$( echo "$SETUP_PHP_EXT_${EXT}_VERSION" | envsubst )";
            PACKAGE="${EXT}${VERSION}";
            pecl install $PACKAGE;
          done

#
# Config process run just before the entrypoint
#
config:
  # Config env 
  envvars:
    groups:
      main:
        name: 'www-data'
        id: 1082
    users:
      main: 
        name: 'www-data'
        id: 1082
        groups: 'www-data'
    php:
      <<: *php_ext
      paths:
        config:
          php_fpm:
            folder: /usr/local/etc/php-fpm.d
      pool:
        name: www
        user:
          valueFromParse: $CONFIG_USERS_MAIN_NAME
        group:
          valueFromParse: $CONFIG_GROUPS_MAIN_NAME
        listen:
          host: 127.0.0.1
          port: 9000
  processes:
    - title: "Configure php-fpm pool"
      commands:
        # Remove default configuration
        - rm -f ${CONFIG_PATHS_PHP_FPM_FOLDER}/www.conf
        # Create pool configuration
        - POOL_CONF_TEMPLATE="${BUILD_PATHS_TEMPLATES}/pool.conf" 
        - POOL_CONF_TARGET="${CONFIG_PATHS_PHP_FPM_FOLDER}/${CONFIG_PHP_POOL_NAME:-www}.conf"
        - echo "$POOL_CONF_TEMPLATE" > envsubst > "$POOL_CONF_TARGET"
    
    - title: "Enable extension gd"
      shell_condition: "$CONFIG_PHP_EXT_GD = $GENERAL_KEYS_TRUE"
      commands:
        - ENABLED_EXTENSIONS="$ENABLED_EXTENSIONS gd"

    - title: "Enable extension iconv"
      shell_condition: "$CONFIG_PHP_EXT_ICONV = $GENERAL_KEYS_TRUE"
      commands:
        - ENABLED_EXTENSIONS="$ENABLED_EXTENSIONS iconv"

    - title: "Enable extension opcache"
      shell_condition: "$CONFIG_PHP_EXT_OPCACHE = $GENERAL_KEYS_TRUE"
      commands:
        - ENABLED_EXTENSIONS="$ENABLED_EXTENSIONS opcache"

    - title: "Enable extension readline"
      shell_condition: "$CONFIG_PHP_EXT_READLINE = $GENERAL_KEYS_TRUE"
      commands:
        - ENABLED_EXTENSIONS="$ENABLED_EXTENSIONS readline"

    - title: "Enable extension soap"
      shell_condition: "$CONFIG_PHP_EXT_SOAP = $GENERAL_KEYS_TRUE"
      commands:
        - ENABLED_EXTENSIONS="$ENABLED_EXTENSIONS soap"

    - title: "Enable extension mysqli"
      shell_condition: "$CONFIG_PHP_EXT_MYSQLI = $GENERAL_KEYS_TRUE"
      commands:
        - ENABLED_EXTENSIONS="$ENABLED_EXTENSIONS mysqli"

    - title: "Enable extension pdo_mysql"
      shell_condition: "$CONFIG_PHP_EXT_PDO_MYSQL = $GENERAL_KEYS_TRUE"
      commands:
        - ENABLED_EXTENSIONS="$ENABLED_EXTENSIONS pdo_mysql"

    - title: "Enable extension curl"
      shell_condition: "$CONFIG_PHP_EXT_CURL = $GENERAL_KEYS_TRUE"
      commands:
        - ENABLED_EXTENSIONS="$ENABLED_EXTENSIONS curl"

    - title: "Enable extension json"
      shell_condition: "$CONFIG_PHP_EXT_JSON = $GENERAL_KEYS_TRUE"
      commands:
        - ENABLED_EXTENSIONS="$ENABLED_EXTENSIONS json"

    - title: "Enable extension mcrypt"
      shell_condition: "$CONFIG_PHP_EXT_MCRYPT = $GENERAL_KEYS_TRUE"
      commands:
        - ENABLED_EXTENSIONS="$ENABLED_EXTENSIONS mcrypt"

    - title: "Enable extension mbstring"
      shell_condition: "$CONFIG_PHP_EXT_MBSTRING = $GENERAL_KEYS_TRUE"
      commands:
        - ENABLED_EXTENSIONS="$ENABLED_EXTENSIONS mbstring"

    - title: "Enable extension sodium"
      shell_condition: "$CONFIG_PHP_EXT_SODIUM = $GENERAL_KEYS_TRUE"
      commands:
        - ENABLED_EXTENSIONS="$ENABLED_EXTENSIONS sodium"

    - title: "Enable extension zip"
      shell_condition: "$CONFIG_PHP_EXT_ZIP = $GENERAL_KEYS_TRUE"
      commands:
        - ENABLED_EXTENSIONS="$ENABLED_EXTENSIONS zip"

    - title: "Enable extension redis"
      shell_condition: "$CONFIG_PHP_EXT_REDIS = $GENERAL_KEYS_TRUE"
      commands:
        - ENABLED_EXTENSIONS="$ENABLED_EXTENSIONS redis"

    - title: "Enable extension xdebug"
      shell_condition: "$CONFIG_PHP_EXT_XDEBUG = $GENERAL_KEYS_TRUE"
      commands:
        - ENABLED_EXTENSIONS="$ENABLED_EXTENSIONS xdebug"
        
    - title: "Enable extensions"
      shell_condition: "$CONFIG_PHP_EXT_XDEBUG = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable $ENABLED_EXTENSIONS

#
# Testing
#
test:
  processes:
    - title: "Starting container"
      commands:
        - TEST_CONTAINER_ID=$(
            docker run -d 
              -p 127.0.0.1:${TEST_HOST_PORT}:${BUILD_PORTS_MAIN} 
              ${BUILD_USER}/${BUILD_NAME}:${BUILD_VERSION}
          )

    - title: "Testing service every second for 5min as docker-php-ext-enable could request packages from internet slowing down the config"
      commands:
        - SCRIPT_NAME=/test.php
        - SCRIPT_FILENAME=/test.php
        - REQUEST_METHOD=GET
        - CONDITION="cgi-fcgi -bind -connect 127.0.0.1:${TEST_HOST_PORT}"
        - MAX_TRIES=300
        - SECONDS_BETWEEN_TRIES=1
        - c=0
        - while ! eval "$CONDITION"; 
          do 
            if [ $c -ge ${MAX_TRIES} ]; then docker logs $TEST_CONTAINER_ID; exit 1; else c=$(($c + 1)); fi;
            echo "Try $c failed"; 
            sleep ${SECONDS_BETWEEN_TRIES}; 
          done
