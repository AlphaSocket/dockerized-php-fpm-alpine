project: 
  title: &project_title Alphasocket/dockerized-php-fpm-alpine
  codename: &project_codename php-fpm-alpine
  description: Dockerized PHP-FPM service on alpine distro

#
# Build process
# Creates dockerfile and file used in it
#
build:
  envvars:
    name: *project_codename
    # PHP
    php:
      version: 
        valueFromCommand: 'version=$(echo $BUILD_BRANCH | cut -d \- -f 1); [ "version" = "latest" ] && echo 7.2 || echo $version'
      fpm:
        port: '9000'
      xdebug:
        port: '9001'
    from:
      valueFromCommand: "echo php:${BUILD_BRANCH}-fpm-alpine | sed 's/latest/7.2/g'"
    ports:
      main: 
        valueFromParse: $BUILD_PHP_FPM_PORT
      additional: 
        valueFromCommand: '[ "$BUILD_ENV" = "$GENERAL_KEYS_DEV" ] && echo "${BUILD_PHP_XDEBUG_PORT}" || echo ""'
    cmd: /usr/local/bin/docker-php-entrypoint php-fpm

#
# Setup process injected in dockerfile
#
setup:
  # Setup env 
  envvars:
    dependencies:
      setup: "binutils-libs binutils m4 perl autoconf libmagic file libgcc libstdc++ gmp libgomp libatomic mpfr3 gcc libc-dev g++ make re2c"
      config: ""
    php: &php_ext
      ext: 
        curl: True
        gd: True
        iconv: True
        mysqli: True
        mbstring: True
        pdo_mysql: True
        mcrypt:
          valueFromCommand: '[ "$BUILD_PHP_VERSION" = "7.2" ] && echo $GENERAL_KEYS_FALSE || echo $GENERAL_KEYS_TRUE'
        opcache: True
        readline: True
        redis: True
        soap: True
        sodium:
          valueFromCommand: '[ "$BUILD_PHP_VERSION" = "7.2" ] && echo $GENERAL_KEYS_TRUE || echo $GENERAL_KEYS_FALSE'
        xml: True
        xdebug:
          valueFromCommand: '[ "$BUILD_ENV" = "$GENERAL_KEYS_DEV" ] && echo "$GENERAL_KEYS_TRUE" || echo "$GENERAL_KEYS_FALSE"'
        zip: True
  # Setup Processes
  processes:
    - title: "Install dependencies"
      shell_condition: '! "$SETUP_DEPENDENCIES_CONFIG$SETUP_DEPENDENCIES_SETUP" = ""'
      commands: 
        - "apk add --no-cache $SETUP_DEPENDENCIES_CONFIG $SETUP_DEPENDENCIES_SETUP"

    - title: "Install PHP extension gd"
      shell_condition: "$SETUP_PHP_EXT_GD = $GENERAL_KEYS_TRUE"
      commands: 
        # Dependencies
        - apk --no-cache add freetype libpng libjpeg-turbo freetype-dev libpng-dev libjpeg-turbo-dev musl musl-dev
        # Config
        - "docker-php-ext-configure gd \
          --with-gd \
          --with-freetype-dir=/usr/include/ \
          --with-png-dir=/usr/include/ \
          --with-jpeg-dir=/usr/include/"
        # Install
        - docker-php-ext-install gd

    - title: "Install PHP extension iconv"
      shell_condition: "$SETUP_PHP_EXT_ICONV = $GENERAL_KEYS_TRUE"
      commands: 
        # Dependencies
        - apk --no-cache add musl musl-dev
        # Install
        - docker-php-ext-install iconv

    - title: "Install PHP extension opcache"
      shell_condition: "$SETUP_PHP_EXT_OPCACHE = $GENERAL_KEYS_TRUE"
      commands: 
        # Dependencies
        - apk --no-cache add musl musl-dev
        # Install
        - docker-php-ext-install opcache

    - title: "Install PHP extension readline"
      shell_condition: "$SETUP_PHP_EXT_READLINE = $GENERAL_KEYS_TRUE"
      commands: 
        # Dependencies
        - apk --no-cache add musl-dev libedit-dev
        # Install
        - docker-php-ext-install readline

    - title: "Install PHP extension soap"
      shell_condition: "$SETUP_PHP_EXT_SOAP = $GENERAL_KEYS_TRUE"
      commands: 
        # Dependencies
        - apk --no-cache add libxml2-dev
        # Install
        - docker-php-ext-install soap

    - title: "Install PHP extension xml"
      shell_condition: "$SETUP_PHP_EXT_XML = $GENERAL_KEYS_TRUE"
      commands: 
        # Dependencies
        - apk --no-cache add libxml2-dev
        # Install
        - docker-php-ext-install xml

    - title: "Install PHP extension mysqli"
      shell_condition: "$SETUP_PHP_EXT_MYSQLI = $GENERAL_KEYS_TRUE"
      commands: 
        # Dependencies
        - apk --no-cache add libxml2-dev
        # Install
        - docker-php-ext-install mysqli

    - title: "Install PHP extension pdo_mysql"
      shell_condition: "$SETUP_PHP_EXT_PDO_MYSQL = $GENERAL_KEYS_TRUE"
      commands: 
        # Dependencies
        - apk --no-cache add libxml2-dev
        # Install
        - docker-php-ext-install pdo_mysql

    - title: "Install PHP extension curl"
      shell_condition: "$SETUP_PHP_EXT_CURL = $GENERAL_KEYS_TRUE"
      commands: 
        # Dependencies
        - apk --no-cache add curl-dev
        # Install
        - docker-php-ext-install curl

    - title: "Install PHP extension json"
      shell_condition: "$SETUP_PHP_EXT_JSON = $GENERAL_KEYS_TRUE"
      commands: 
            # Install
        - docker-php-ext-install json

    - title: "Install PHP extension mcrypt"
      shell_condition: "$SETUP_PHP_EXT_MCRYPT = $GENERAL_KEYS_TRUE"
      commands: 
        # Dependencies
        - apk --no-cache add libmcrypt-dev libltdl
        # Install
        - docker-php-ext-install mcrypt

    - title: "Install PHP extension mbstring"
      shell_condition: "$SETUP_PHP_EXT_MBSTRING = $GENERAL_KEYS_TRUE"
      commands: 
        # Install
        - docker-php-ext-install mbstring

    - title: "Install PHP extension sodium"
      shell_condition: "$SETUP_PHP_EXT_SODIUM = $GENERAL_KEYS_TRUE"
      commands: 
        # Dependencies
        - apk --no-cache add libsodium-dev
        # Install
        - docker-php-ext-install sodium

    - title: "Install PHP extension zip"
      shell_condition: "$SETUP_PHP_EXT_ZIP = $GENERAL_KEYS_TRUE"
      commands: 
        # Dependencies
        - apk --no-cache add zlib
        # Install
        - docker-php-ext-install zip

    - title: "Install PHP extension redis"
      shell_condition: "$SETUP_PHP_EXT_REDIS = $GENERAL_KEYS_TRUE"
      commands: 
        - pecl install redis

    - title: "Install PHP extension xdebug"
      shell_condition: "$SETUP_PHP_EXT_XDEBUG = $GENERAL_KEYS_TRUE"
      commands: 
        - pecl install xdebug

    - title: "Clean container"
      commands: 
        - "apk del $SETUP_DEPENDENCIES_BUILD"

#
# Config process run just before the entrypoint
#
config:
  # Config env 
  envvars:
    php:
      <<: *php_ext
  processes:
    - title: "Enable extension gd"
      shell_condition: "$CONFIG_PHP_EXT_GD = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable gd

    - title: "Enable extension iconv"
      shell_condition: "$CONFIG_PHP_EXT_ICONV = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable iconv

    - title: "Enable extension opcache"
      shell_condition: "$CONFIG_PHP_EXT_OPCACHE = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable opcache

    - title: "Enable extension readline"
      shell_condition: "$CONFIG_PHP_EXT_READLINE = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable readline

    - title: "Enable extension soap"
      shell_condition: "$CONFIG_PHP_EXT_SOAP = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable soap

    - title: "Enable extension mysqli"
      shell_condition: "$CONFIG_PHP_EXT_MYSQLI = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable mysqli

    - title: "Enable extension pdo_mysql"
      shell_condition: "$CONFIG_PHP_EXT_PDO_MYSQL = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable pdo_mysql

    - title: "Enable extension curl"
      shell_condition: "$CONFIG_PHP_EXT_CURL = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable curl

    - title: "Enable extension json"
      shell_condition: "$CONFIG_PHP_EXT_JSON = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable json

    - title: "Enable extension mcrypt"
      shell_condition: "$CONFIG_PHP_EXT_MCRYPT = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable mcrypt

    - title: "Enable extension mbstring"
      shell_condition: "$CONFIG_PHP_EXT_MBSTRING = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable mbstring

    - title: "Enable extension sodium"
      shell_condition: "$CONFIG_PHP_EXT_SODIUM = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable sodium

    - title: "Enable extension zip"
      shell_condition: "$CONFIG_PHP_EXT_ZIP = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable zip

    - title: "Enable extension redis"
      shell_condition: "$CONFIG_PHP_EXT_REDIS = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable redis

    - title: "Enable extension xdebug"
      shell_condition: "$CONFIG_PHP_EXT_XDEBUG = $GENERAL_KEYS_TRUE"
      commands:
        - docker-php-ext-enable xdebug

test:
  processes:
    - title: "Starting container"
      commands:
        - TEST_CONTAINER_ID=$(
            docker run -d 
              -p 127.0.0.1:${TEST_HOST_PORT}:${BUILD_PORTS_MAIN} 
              ${BUILD_USER}/${BUILD_NAME}:${BUILD_VERSION}
          )

    - title: "Testing service every second for 5min as docker-php-ext-enable could request packages from internet slowing down the config"
      commands:
        - SCRIPT_NAME=/test.php
        - SCRIPT_FILENAME=/test.php
        - REQUEST_METHOD=GET
        - CONDITION="cgi-fcgi -bind -connect 127.0.0.1:${TEST_HOST_PORT}"
        - MAX_TRIES=300
        - SECONDS_BETWEEN_TRIES=1
        - c=0
        - while ! eval "$CONDITION"; 
          do 
            if [ $c -ge ${MAX_TRIES} ]; then exit 1; else c=$(($c + 1)); fi;
            echo "Try $c failed"; 
            sleep ${SECONDS_BETWEEN_TRIES}; 
          done
